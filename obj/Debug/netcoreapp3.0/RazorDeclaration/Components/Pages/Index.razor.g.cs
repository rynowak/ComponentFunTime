#pragma checksum "C:\Users\rynowak\source\repos\ComponentFunTime\Components\Pages\Index.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "039478ed916957fed276e6470c00a78062e93c22"
// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace ComponentFunTime.Components.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
    using System.Net.Http;
    using Microsoft.AspNetCore.Components.Layouts;
    using Microsoft.AspNetCore.Components.Routing;
    using Microsoft.JSInterop;
    using ComponentFunTime.Components.Shared;
    using Microsoft.AspNetCore.Components.Forms;
    [Microsoft.AspNetCore.Components.Layouts.LayoutAttribute(typeof(MainLayout))]

    [Microsoft.AspNetCore.Components.RouteAttribute("/")]
    public class Index : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.RenderTree.RenderTreeBuilder builder)
        {
        }
        #pragma warning restore 1998
#line 58 "C:\Users\rynowak\source\repos\ComponentFunTime\Components\Pages\Index.razor"
            
    List<Person> people = new List<Person>();
    Person person;

    int? editIndex;
    bool showEditorForCreate;
    bool showEditorForEdit;

    void Hire()
    {
        person = new Person()
        {
            Areas =
            {
                new FeatureArea(),
            },
        };
        showEditorForCreate = true;
    }

    void Fire(Person person)
    {
        people.Remove(person);
    }

    void Edit(Person person)
    {
        // Don't edit this object directly - we don't want to propagate edits
        // when the user cancels
        this.person = new Person(person);
        editIndex = people.IndexOf(person);
        showEditorForEdit = true;
    }

    void CloseEditor()
    {
        showEditorForCreate = false;
        showEditorForEdit = false;
        editIndex = null;
        person = null;
        StateHasChanged();
    }

    void OnConfirm()
    {
        if (showEditorForCreate)
        {
            people.Add(person);
        }
        else
        {
            people[editIndex.Value] = person;
        }

        CloseEditor();
        StateHasChanged();
    }

#line default
#line hidden
    }
}
#pragma warning restore 1591
